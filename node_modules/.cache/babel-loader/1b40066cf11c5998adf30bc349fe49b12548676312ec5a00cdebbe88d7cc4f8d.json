{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\saket\\\\Downloads\\\\Contact_LIst_Reactjs-main\\\\src\\\\components\\\\data.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { handleDeleteClick, handleAddClick, App, Edit } from './index.js';\nimport './data.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst url = 'https://jsonplaceholder.typicode.com/users';\nexport function ContactList() {\n  _s();\n  const [list, setList] = useState([]); // state to hold the list of contacts\n  const [isEdit, setIsEdit] = useState(false); // state to track if an edit modal is open\n  const [editId, setEditId] = useState(''); // state to track the id of the contact being edited\n\n  useEffect(() => {\n    // fetch data from API when component mounts\n    fetch(url).then(response => response.json()).then(data => {\n      // transform the response data to match the shape of our list state\n      const contacts = data.map(obj => {\n        return {\n          name: obj.username,\n          phone: obj.phone,\n          id: obj.id\n        };\n      });\n      setList(contacts);\n    }).catch(error => console.error('Error fetching data:', error));\n  }, []);\n  const addClick = (name, phone) => {\n    const id = Date.now();\n    handleAddClick(name, phone, id, list, setList); // call the handleAddClick function to add a new contact\n  };\n\n  const editClick = id => {\n    setIsEdit(!isEdit); // toggle the isEdit state to show/hide the edit modal\n    setEditId(id); // set the id of the contact being edited\n  };\n\n  const deleteClick = id => {\n    handleDeleteClick(id, list, setList); // call the handleDeleteClick function to delete a contact\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"data\",\n    children: [/*#__PURE__*/_jsxDEV(App, {\n      addClick: addClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Contacts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), list.map((contact, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"contact-data\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"Name: \", contact.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"Contact: \", contact.phone]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"icons\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            onClick: () => {\n              editClick(contact.id);\n            },\n            style: {\n              color: 'orange'\n            },\n            className: \"fa-solid fa-pen-to-square\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            onClick: () => {\n              deleteClick(contact.id);\n            },\n            style: {\n              color: 'red'\n            },\n            className: \"fa-solid fa-trash\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this), isEdit && editId === contact.id && /*#__PURE__*/_jsxDEV(Edit, {\n        id: contact.id,\n        list: list,\n        setList: setList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }, this)]\n    }, `index-${index}`, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n_s(ContactList, \"ok44khacUmqH6Mg7j26wXCc0wwc=\");\n_c = ContactList;\nvar _c;\n$RefreshReg$(_c, \"ContactList\");","map":{"version":3,"names":["React","useState","useEffect","handleDeleteClick","handleAddClick","App","Edit","jsxDEV","_jsxDEV","url","ContactList","_s","list","setList","isEdit","setIsEdit","editId","setEditId","fetch","then","response","json","data","contacts","map","obj","name","username","phone","id","catch","error","console","addClick","Date","now","editClick","deleteClick","className","children","fileName","_jsxFileName","lineNumber","columnNumber","contact","index","onClick","style","color","_c","$RefreshReg$"],"sources":["C:/Users/saket/Downloads/Contact_LIst_Reactjs-main/src/components/data.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { handleDeleteClick, handleAddClick, App, Edit } from './index.js';\nimport './data.css';\n\nconst url = 'https://jsonplaceholder.typicode.com/users';\n\nexport function ContactList() {\n  const [list, setList] = useState([]); // state to hold the list of contacts\n  const [isEdit, setIsEdit] = useState(false); // state to track if an edit modal is open\n  const [editId, setEditId] = useState(''); // state to track the id of the contact being edited\n\n  useEffect(() => {\n    // fetch data from API when component mounts\n    fetch(url)\n      .then((response) => response.json())\n      .then((data) => {\n        // transform the response data to match the shape of our list state\n        const contacts = data.map((obj) => {\n          return {\n            name: obj.username,\n            phone: obj.phone,\n            id: obj.id,\n          };\n        });\n        setList(contacts);\n      })\n      .catch((error) => console.error('Error fetching data:', error));\n  }, []);\n\n  const addClick = (name, phone) => {\n    const id = Date.now();\n    handleAddClick(name, phone, id, list, setList); // call the handleAddClick function to add a new contact\n  };\n\n  const editClick = (id) => {\n    setIsEdit(!isEdit); // toggle the isEdit state to show/hide the edit modal\n    setEditId(id); // set the id of the contact being edited\n  };\n\n  const deleteClick = (id) => {\n    handleDeleteClick(id, list, setList); // call the handleDeleteClick function to delete a contact\n  };\n\n  return (\n    <div className=\"data\">\n      <App addClick={addClick} /> {/* render the form to add a new contact */}\n      <h1>Contacts</h1>\n      {/* map over the list of contacts and render each contact */}\n      {list.map((contact, index) => (\n        <div key={`index-${index}`} className=\"contact-data\">\n          <span>Name: {contact.name}</span>\n          <span>Contact: {contact.phone}</span>\n          {/* render edit and delete icons */}\n          <div className=\"icons\">\n            <span>\n              <i\n                onClick={() => {\n                  editClick(contact.id);\n                }}\n                style={{ color: 'orange' }}\n                className=\"fa-solid fa-pen-to-square\"\n              ></i>\n            </span>\n            <span>\n              <i\n                onClick={() => {\n                  deleteClick(contact.id);\n                }}\n                style={{ color: 'red' }}\n                className=\"fa-solid fa-trash\"\n              ></i>\n            </span>\n          </div>\n          {/* render the edit modal if isEdit state is true and editId matches the id of the contact being edited */}\n          {isEdit && editId === contact.id && (\n            <Edit id={contact.id} list={list} setList={setList} />\n          )}\n        </div>\n      ))}\n    </div>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}